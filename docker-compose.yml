services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        working_dir: /var/www
        volumes:
            - .:/var/www
        networks:
            - laravel_network

    pgsql:
        container_name: pgsql
        image: "postgres:17"
        ports:
            - "${FORWARD_DB_PORT:-5432}:5432"
        environment:
            PGPASSWORD: "${DB_PASSWORD:-secret}"
            POSTGRES_DB: "${DB_DATABASE}"
            POSTGRES_USER: "${DB_USERNAME}"
            POSTGRES_PASSWORD: "${DB_PASSWORD:-secret}"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - laravel_network
        healthcheck:
            test:
                - CMD
                - pg_isready
                - "-q"
                - "-d"
                - "${DB_DATABASE}"
                - "-U"
                - "${DB_USERNAME}"
            retries: 3
            timeout: 5s

    webserver:
        image: nginx:latest
        container_name: laravel_webserver
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - .:/var/www
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./nginx/ssl:/etc/nginx/ssl
            - ./certbot/www:/var/www/certbot
            - ./certbot/conf:/etc/letsencrypt
        depends_on:
            - app
        networks:
            - laravel_network

    certbot:
        image: certbot/certbot:latest
        container_name: laravel_certbot
        volumes:
            - ./nginx/ssl:/etc/letsencrypt/live
            - ./certbot/www:/var/www/certbot
            - ./certbot/conf:/etc/letsencrypt
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        depends_on:
            - webserver
        networks:
            - laravel_network

volumes:
    postgres_data:

networks:
    laravel_network:
        driver: bridge
